# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

services:
  # AuthService API
  authservice:
    build:
      context: .
      dockerfile: src/AuthService/AuthService.API/Dockerfile
    container_name: authservice
    ports:
      - "5002:5000"
      - "5003:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:5001;http://+:5000
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ConnectionStrings__DefaultConnection=Server=authservice-db;Database=AuthServiceDB;User Id=sa;Password=${SQL_PASSWORD};TrustServerCertificate=True;
    volumes:
      - ${CERT_PATH}:/https:ro
    networks:
      - expense-network
    depends_on:
      - authservice-db
    healthcheck:
      test: curl -f -k http://localhost:5000/health || curl -f -k https://localhost:5001/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # SQL Server
  authservice-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: authservice-db
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${SQL_PASSWORD}
      - TZ=UTC
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - expense-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${SQL_PASSWORD}" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  sqlserver_data:
    driver: local

networks:
  expense-network:
    driver: bridge
