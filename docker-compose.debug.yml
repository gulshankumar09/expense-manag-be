version: "3.4"

services:
  authserviceapi:
    build:
      context: .
      dockerfile: src/AuthService/AuthService.API/Dockerfile
      args:
        - configuration=Debug
    container_name: authserviceapi
    ports:
      - "5002:8080"
      - "5001:8081"
    volumes:
      - ${USER_SECRETS_PATH_WINDOWS:-${USER_SECRETS_PATH_UNIX}}:/root/.microsoft/usersecrets:ro
      - ${HTTPS_PATH_WINDOWS:-${HTTPS_PATH_UNIX}}:/root/.aspnet/https:ro
      - ./certs:/https:ro
      - ./src:/src
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8081;http://+:8080
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=true
      - NUGET_FALLBACK_PACKAGES=
      - VSTEST_HOST_DEBUG=1
      # Database Configuration
      - ConnectionStrings__DefaultConnection=Server=expense-db.cvo804wmc6e2.us-east-1.rds.amazonaws.com,1433;Database=AuthServiceDB;User Id=admin;Password=Root326745#;MultipleActiveResultSets=true;TrustServerCertificate=True
      # Enable SQL Client logging
      - Logging__LogLevel__Microsoft.EntityFrameworkCore.Database.Command=Debug
      - Logging__LogLevel__Microsoft.Data.SqlClient=Debug
    networks:
      - expense-network

    healthcheck:
      test: curl -f -k http://localhost:8080/health || curl -f -k https://localhost:8081/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    # expense-db:
  #   image: mcr.microsoft.com/mssql/server:2022-latest
  #   container_name: expense-db
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - MSSQL_SA_PASSWORD=Root123#
  #     - TZ=UTC
  #   ports:
  #     - "1433:1433"
  #   volumes:
  #     - sqlserver_data:/var/opt/mssql
  #   networks:
  #     - expense-network
  #   healthcheck:
  #     test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Root123#" -Q "SELECT 1" -b -o /dev/null
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 10s


networks:
  expense-network:
    driver: bridge
