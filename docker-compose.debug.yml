version: "3.4"

services:
  authserviceapi:
    build:
      context: .
      dockerfile: src/AuthService/AuthService.API/Dockerfile
      args:
        - configuration=Debug
    container_name: authserviceapi
    ports:
      - "5002:8080"
      - "5001:8081"
    volumes:
      - ~/.aspnet/https:/https:ro
      - ${HOME}/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro
      - ${HOME}/.aspnet/https:/root/.aspnet/https:ro
      - ./src:/src
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8081;http://+:8080
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - DOTNET_USE_POLLING_FILE_WATCHER=true

      - ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=true
      - NUGET_FALLBACK_PACKAGES=
      - VSTEST_HOST_DEBUG=1

      - ConnectionStrings__DefaultConnection=Server=expense-db;Database=AuthServiceDB;User Id=sa;Password=Root123#;MultipleActiveResultSets=true;TrustServerCertificate=True
    networks:
      - expense-network
    depends_on:
      - expense-db
    healthcheck:
      test: curl -f -k http://localhost:8080/health || curl -f -k https://localhost:8081/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  expense-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: expense-db
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Root123#
      - TZ=UTC
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - expense-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Root123#" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  expense-network:
    driver: bridge

volumes:
  sqlserver_data:
    driver: local
